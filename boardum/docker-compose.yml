version: '3.8' # Specify the Docker Compose file format version

services:
  react-app:
    build:
      dockerfile: Dockerfile
    ports:
      - "3000:3000" # Map port 3000 on the host to port 3000 in the container
    depends_on:
      - elasticsearch # Ensure Elasticsearch starts before the React app
    environment:
      - REACT_APP_ELASTICSEARCH_URL=http://elasticsearch:9200 # Environment variable for React app to connect to Elasticsearch
    volumes:
      - .:/src/app/
      - /src/app/node_modules
    command: npm run dev

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.2 # Use an appropriate Elasticsearch version
    container_name: elasticsearch
    environment:
      - discovery.type=single-node # Run Elasticsearch in single-node mode
      - xpack.security.enabled=false # Disable security for simplicity (not recommended for production)
    ports:
      - "9200:9200" # Elasticsearch HTTP port
      - "9300:9300" # Elasticsearch transport port
    volumes:
      - es_data:/usr/share/elasticsearch/data # Persistent volume for Elasticsearch data
      - ./data:/data # Mount local data folder into the container

  kibana:
    image: docker.elastic.co/kibana/kibana:8.6.2
    container_name: kibana
    ports:
      - "5601:5601" # Kibana UI port
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch

  seed-data:
    image: curlimages/curl:latest
    container_name: seed-data
    depends_on:
      - elasticsearch
    volumes:
      - ./data:/data # Mount the same data directory
    entrypoint: ["/bin/sh", "-c", "/data/bulkSeed.sh"] # Run the script automatically on startup

volumes:
  es_data:
